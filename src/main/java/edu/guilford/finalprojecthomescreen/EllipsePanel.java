package edu.guilford.finalprojecthomescreen;

import java.awt.Color;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.event.KeyEvent;
import java.util.ArrayList;
import java.util.Random;

public class EllipsePanel extends javax.swing.JPanel {

    private int xInitial;
    private int yInitial;
    private int xFinal;
    private int yFinal;
    private ArrayList<ColorEllipse> ellipses = new ArrayList<ColorEllipse>();
    private Random rand = new Random();
    private Color rbColor = Color.YELLOW;
    private boolean fullScreen;
    
    public EllipsePanel() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        blackBackgroundButton = new javax.swing.JButton();
        whiteBackgroundButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(0, 0, 0));
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                formMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                formMouseReleased(evt);
            }
        });
        addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                formKeyPressed(evt);
            }
        });

        blackBackgroundButton.setText("Black");
        blackBackgroundButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blackBackgroundButtonActionPerformed(evt);
            }
        });

        whiteBackgroundButton.setText("White");
        whiteBackgroundButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                whiteBackgroundButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(whiteBackgroundButton)
                    .addComponent(blackBackgroundButton))
                .addContainerGap(694, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(blackBackgroundButton)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(whiteBackgroundButton)
                .addContainerGap(544, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        // TODO add your handling code here:
        xFinal = evt.getX();
        yFinal = evt.getY();
        repaint();
    }//GEN-LAST:event_formMouseDragged

    private void formMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMousePressed
        // TODO add your handling code here:
        // get the position when the user presses the mouse
        xInitial = evt.getX();
        yInitial = evt.getY();
    }//GEN-LAST:event_formMousePressed

    private void formMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseReleased
        // TODO add your handling code here:
        int red = rand.nextInt(256);
        int green = rand.nextInt(256);
        int blue = rand.nextInt(256);
        int alpha = rand.nextInt(256);

        Color ellipseColor = new Color(red, green, blue, alpha);
        int width = xFinal - xInitial;
        int height = yFinal - yInitial;
        ColorEllipse ellipse = new ColorEllipse(ellipseColor,
        xInitial, yInitial, width, height);
        // add it to our list
        ellipses.add(ellipse);
        repaint();
        
    }//GEN-LAST:event_formMouseReleased

    private void formKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formKeyPressed
        // TODO add your handling code here:
        if (evt.getKeyCode() == KeyEvent.VK_ESCAPE) {
            ellipses.clear();
            repaint();
        }
        if (evt.getKeyCode() == KeyEvent.VK_J) {
            rbColor = Color.PINK;
            repaint();
        }
        if (evt.getKeyCode() == KeyEvent.VK_K) {
            rbColor = Color.WHITE;
            repaint();
        }
        if (evt.getKeyCode() == KeyEvent.VK_L) {
            rbColor = Color.green;
            repaint();
        }
        
    }//GEN-LAST:event_formKeyPressed

    private void blackBackgroundButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blackBackgroundButtonActionPerformed
        // TODO add your handling code here:
        //setBackground(Color.BLACK);
    }//GEN-LAST:event_blackBackgroundButtonActionPerformed

    private void whiteBackgroundButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_whiteBackgroundButtonActionPerformed
        // TODO add your handling code here:
        //setBackground(Color.WHITE);
    }//GEN-LAST:event_whiteBackgroundButtonActionPerformed


    @Override
    protected void paintComponent(Graphics g) {
        super.paintComponent(g); // Generated from nbfs://nbhost/SystemFileSystem/Templates/Classes/Code/OverriddenMethodBody
        Graphics2D g2 = (Graphics2D) g;

        int width = xFinal - xInitial;
        int height = yFinal - yInitial;
        ColorEllipse ellipse = new ColorEllipse(rbColor,
                xInitial, yInitial,
                width, height);
        g2.setColor(ellipse.getEllipseColor());
        g2.draw(ellipse);
        
        for (ColorEllipse theEllipse : ellipses) {
           g2.setColor(theEllipse.getEllipseColor());
           g2.fill(theEllipse);
           
        }
       
    }

    public Color getRbColor() {
        return rbColor;
    }

    public void setRbColor(Color rbColor) {
        this.rbColor = rbColor;
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton blackBackgroundButton;
    private javax.swing.JButton whiteBackgroundButton;
    // End of variables declaration//GEN-END:variables
}
